
###### ~ COPIAR EN: ejercicios.cpp ~ #######


bool hablantesSuperpuestos(reunion const& r, int prof, int freq, int umbral) {
    bool resp = false;
    int len = r.size();
    for(int i=0; i<len; i++){
        for(int j=0; j<len; j++){
            if (i != j){
                resp = resp || not(noSeSuperponen(r[i].first, r[j].first, umbral));
            }
        }
    }
    return resp;
}



###### ~ COPIAR EN: auxiliares.cpp ~ #######



bool noSeSuperponen(senial uno, senial dos, int umbral){
    bool noSuperpuestos = true;
    for(int k = 0; k < uno.size(); k++){
        if (k == 0){
            noSuperpuestos = noSuperpuestos && ( ( (uno[k] >= umbral) && ( (dos[k] < umbral)
                    && (dos[(k+1)] < umbral))) || ((uno[k] < umbral) && (uno[(k+1)] < umbral)) );
        } else {
            if (k == uno.size() - 1) {
                noSuperpuestos = noSuperpuestos && ( (((uno[k-1] >= umbral) || ((uno[k-1] < umbral)
                        && (uno[k] >= umbral)))  && ((dos[k] < umbral) && (dos[k-1] < umbral)))
                        || ((uno[k-1] < umbral) && (uno[k] < umbral)));
            } else {
                noSuperpuestos = noSuperpuestos && ( ( (uno[k] >= umbral) && ( (dos[k] < umbral)
                        && ( (dos[(k+1)] < umbral) || (dos[k-1] < umbral) ))) || (uno[k] < umbral) );
            }
        }
    }
    return noSuperpuestos;
}


############ ~ TESTS ~ ############



TEST(hablantesSuperpuestos, sinHablantesSuperpuestos) {
    int prof = 16;
    int freq = 10;
    int umbral = 12;

    senial se_a = {10, 11, 2, 7, 9, 2, 1, 0, 21, 15, 7};
    senial se_b = {2, 3, 1, -10, -3, -5, -4, -6, -10, -7, 0 };
    senial se_c = {-13, -9, -7, -5, -77, -18, -3, -3, 7, 6, 5};
    pair <senial, hablante> ha_a (se_a, 0);
    pair <senial, hablante> ha_b (se_b, 1);
    pair <senial, hablante> ha_c (se_c, 2);

    reunion re = {ha_a, ha_b, ha_c};

    EXPECT_FALSE(hablantesSuperpuestos(re, prof, freq, umbral));
}

TEST(hablantesSuperpuestos, un_solo_ppte) {
    int prof = 8;
    int freq = 10;
    int umbral = 3;

    senial s_a = {1, 5, 4, 3, -10, 5, 0, 9, 2, 2, 15, -34};
    pair <senial, hablante> h_a(s_a, 0);

    reunion r = {h_a};
    EXPECT_FALSE(hablantesSuperpuestos(r, prof, freq, umbral));
}


